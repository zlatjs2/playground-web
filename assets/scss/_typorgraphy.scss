/// font palette
$fonts: (
  title1: (
    font-size: 1.5rem,
    line-height: 1.34,
  ),
  title2: (
    font-size: 1.25rem,
    line-height: 1.6,
  ),
  subtitle1: (
    font-size: 1rem,
    line-height: 1.75,
  ),
  subtitle2: (
    font-size: 0.875rem,
    line-height: 1.57,
  ),
  body1: (
    font-size: 1rem,
    line-height: 1.5,
  ),
  body2: (
    font-size: 0.875rem,
    line-height: 1.43,
  ),
  caption: (
    font-size: 0.75rem,
    line-height: 1.66,
  ),
);

/// font mixin
/// @param  {String}    $name                           font name
/// @param  {String}    $option                         normal or bold
/// @prop   {Bool}      $has-name (false)               $fonts map의 key에 일치하는 $name이 있는지 유/무
/// @prop   {Map}       $css-map                        $name에 일치하는 css-map
/// @example
/// @include font(title1);
/// @include font(body2, bold);
@mixin font($name, $option: 0) {
  $css-map: map-get($fonts, $name);

  @if $option == bold {
    $css-map: map-merge(
      $css-map,
      (
        font-weight: bold,
      )
    );
  }
  @if $option == normal {
    $css-map: map-merge(
      $css-map,
      (
        font-weight: normal,
      )
    );
  }

  /// output
  @each $key, $value in $css-map {
    #{$key}: $value;
  }
}

.title010 {
  font-weight: normal;
  font-size: 24px;
  line-height: 40px;
}
.subtitle010 {
}
.body010 {
}

.text-primary {
  color: $text-primary;
}

.text-secondary {
  color: $text-secondary;
}

.text-disabled {
  color: $text-disabled;
}

.text-error {
  color: $text-error;
}
